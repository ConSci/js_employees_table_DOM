{"version":3,"sources":["scripts/main.js"],"names":["lastChoise","activeRow","headers","document","querySelector","tableBody","list","querySelectorAll","x","addEventListener","action","target","tagName","index","callback","children","indexOf","a","b","innerText","getSalary","localeCompare","innerHTML","sort","forEach","tr","append","row","slice","split","join","classList","remove","closest","add","insertAdjacentHTML","form","normilize","key","value","toLocaleString","showNotification","type","message","notification","notificationTitle","notificationDescription","setTimeout","validation","length","preventDefault","dataFromForm","FormData","newRow","createElement","reset","targetCell","cellIndex","oldData","resetData","replace","targetInput","cloneNode","firstChild","replaceWith","focus","eventKey","blur","e","name"],"mappings":"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","file":"main.8278868e.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write code here\nconst headers = document.querySelector('thead tr');\nconst tableBody = document.querySelector('tbody');\nconst list = [...tableBody.querySelectorAll('tr')];\nlet lastChoise;\nlet x = 1;\n\n// [1] sorting\nheaders.addEventListener('click', action => {\n  if (action.target.tagName !== 'TH') {\n    return;\n  }\n\n  const index = [...headers.children].indexOf(action.target);\n  let callback;\n\n  switch (index) {\n    case 3: // age\n      callback = (a, b) => a.children[index].innerText\n      - b.children[index].innerText;\n      break;\n\n    case 4: // salary\n      callback = (a, b) => getSalary(a) - getSalary(b);\n      break;\n\n    default: // name && position && office\n      callback = (a, b) => {\n        return a.children[index].innerText\n          .localeCompare(b.children[index].innerText);\n      };\n  }\n\n  function getSalary(row) {\n    return +row.children[4].innerText.slice(1).split(',').join('');\n  }\n\n  // DESC or ASC order\n  if (lastChoise === index) {\n    x *= -1;\n  } else {\n    lastChoise = index;\n    x = 1;\n  }\n\n  tableBody.innerHTML = '';\n  list.sort((a, b) => callback(a, b) * x).forEach(tr => tableBody.append(tr));\n});\n\n// [2] focusing\nlet activeRow;\n\ntableBody.addEventListener('click', action => {\n  if (activeRow) {\n    activeRow.classList.remove('active');\n  }\n\n  activeRow = action.target.closest('tr');\n  activeRow.classList.add('active');\n});\n\n// [3] adding form\ndocument.querySelector('table').insertAdjacentHTML('afterend', `\n<form class=\"new-employee-form\">\n  <label>\n    Name: \n    <input \n      name=\"name\" \n      type=\"text\"\n      data-qa=\"name\"\n    >\n  </label>\n\n  <label>\n  Position: \n  <input \n    name=\"position\" \n    type=\"text\"\n    data-qa=\"position\"\n  >\n</label>\n\n<label>\nOffice: \n<select \n  name=\"office\" \n  data-qa=\"office\">\n  <option value=\"Tokyo\">Tokyo</option>\n  <option value=\"Singapore\">Singapore</option>\n  <option value=\"London\">London</option>\n  <option value=\"New York\">New York</option>\n  <option value=\"Edinburgh\">Edinburgh</option>\n  <option value=\"San Francisco\">San Francisco</option>\n  </select>\n</label>\n\n<label>\nAge: \n<input \n  name=\"age\" \n  type=\"number\"\n  data-qa=\"age\"\n>\n</label>\n\n<label>\nSalary: \n<input \n  name=\"salary\" \n  type=\"number\"\n  data-qa=\"salary\"\n>\n</label>\n<button \n  type=\"submit\">\n    Save to table\n</button>\n</form>`\n);\n\nconst form = document.querySelector('.new-employee-form');\n\n// [4] converting salary\nfunction normilize(key, value) {\n  return key === 'salary'\n    ? `$${(+value).toLocaleString()}`\n    : value;\n}\n\n// [5] poping up notification\nfunction showNotification(type, message) {\n  form.insertAdjacentHTML('afterend', `\n  <div \n    class=\"notification\" \n    data-qa=\"notification\">\n      <h1 class=\"title\"></h1>\n      <p></p>\n  </div>\n  `);\n\n  const notification = document.querySelector('.notification');\n  const notificationTitle = document.querySelector('.title');\n  const notificationDescription = document.querySelector('p');\n\n  switch (type) {\n    case 'error':\n      notification.classList.add('error');\n      notificationTitle.innerHTML = 'ERROR';\n      break;\n\n    case 'success':\n      notification.classList.add('success');\n      notificationTitle.innerHTML = 'SUCCESS';\n      break;\n\n    default:\n      return;\n  }\n\n  notificationDescription.innerHTML = message;\n\n  setTimeout(() => {\n    notification.remove();\n  }, 3000);\n}\n\n// [6] validating input\nfunction validation(key, value) {\n  if (!value) {\n    showNotification('error', 'All fields are required');\n\n    return false;\n  }\n\n  if (key === 'name' && value.length < 4) {\n    showNotification('error', 'Name length should be at least 4 letters');\n\n    return false;\n  }\n\n  if (key === 'age' && (+value < 18 || +value > 90)) {\n    showNotification('error', 'Age should be from 18 to 90');\n\n    return false;\n  }\n\n  return true;\n}\n\n// [7] adding new employee\nform.addEventListener('submit', action => {\n  action.preventDefault();\n\n  const dataFromForm = new FormData(form);\n  const newRow = document.createElement('tr');\n\n  for (const [key, value] of dataFromForm) {\n    if (!validation(key, value)) {\n      return;\n    }\n\n    newRow.insertAdjacentHTML('beforeend', `\n    <td>\n      ${normilize(key, value)}\n    </td>`);\n  }\n\n  tableBody.append(newRow);\n  form.reset();\n\n  showNotification('success',\n    'New employee is successfully added to the table');\n});\n\n// [8] editing cell\ntableBody.addEventListener('dblclick', action => {\n  const target = action.target;\n  const targetCell = target.cellIndex;\n  const oldData = target.innerText;\n  const resetData = oldData.replace(/[$,]/g, '');\n  const targetInput = form.querySelectorAll('[name]')[targetCell]\n    .cloneNode(true);\n\n  targetInput.classList.add('cell-input');\n  targetInput.value = resetData;\n  target.firstChild.replaceWith(targetInput);\n  targetInput.focus();\n\n  targetInput.addEventListener('keypress', eventKey => {\n    if (eventKey.key === 'Enter') {\n      targetInput.blur();\n    }\n  });\n\n  targetInput.addEventListener('blur', e => {\n    if (\n      !validation(targetInput.name, targetInput.value) || !targetInput.value\n    ) {\n      target.innerText = oldData;\n\n      return;\n    }\n\n    target.innerText = normilize(targetInput.name, targetInput.value);\n  });\n});\n"]}